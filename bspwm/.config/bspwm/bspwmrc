#!/bin/sh

#LAUNCHERS
$HOME/.config/bspwm/autostart.sh

#MONITORS
LAPTOP=eDP1
DESK=DP3
WORK1=DP1-1
WORK2=DP1-2

function last_state() {
				if [ -f /tmp/numdisplays ]; then
								cat /tmp/numdisplays
				else
								echo "1"
				fi
}

function current_state() {
				xrandr | grep -w "connected" | wc -l
}

function dump_all_nodes_to_laptop() {
				i=0;
				for n in $(bspc query --nodes); do
								bspc node $n --to-desktop $LAPTOP:^$(echo "$i/4" | bc)
								i=$(echo "$i+1" | bc)
				done;
}

prev=$(last_state)
current=$(current_state)
echo $current > /tmp/numdisplays
case $prev in
			1) 
								case $current in 
												1)			
																bspc monitor $LAPTOP --reset-desktops 1 2 3 4 5 6 7 8 9 10 11
																;;
												2)
																bspc monitor $DESK --reset-desktops 11 12 13 14 15 16 17 18 19 20 21
																for i in {1..11}; do
																				bspc desktop $LAPTOP:^$i --swap $DESK:^$i
																				bspc desktop $DESK:^$i --rename $i
																done
																bspc monitor $LAPTOP --reset-desktops 12
																;;
												3)
																bspc monitor $WORK1 --reset-desktops 11 12 13 14 15 16
																bspc monitor $WORK2 --reset-desktops 17 18 19 20 21
																for i in {1..5}; do
																				bspc desktop $LAPTOP:^$i --swap $WORK1:^$i
																				bspc desktop $WORK1:^$i --rename $i
																done;
																for i in {6..11}; do
																				d=$(echo "$i-5" | bc)
																				bspc desktop $LAPTOP:^$i --swap $WORK2:^$d
																				bspc desktop $WORK2:^$d $d
																done;
																bspc monitor $LAPTOP --reset-desktops 12
																;;
												*)
																notify-send "Connected $current displays. Whoa!"
																$(dump_all_nodes_to_laptop)
																;;
								esac
								;;
				2) 
								case $current in
												1)
																for n in $(bspc query --nodes --desktop $LAPTOP:^1); do
																				bspc node $n --to-desktop $DESK:^11
																done
																bspc desktop $LAPTOP:^1 --remove
																bspc monitor $LAPTOP --reset-desktops 11 12 13 14 15 16 17 18 19 20 21
																for i in {1..11}; do
																				bspc desktop $DESK:^$i --swap $LAPTOP:^$i
																				bspc desktop $LAPTOP:^$i --rename $i
																done
																bspc monitor $DESK --remove
																;;
												2)
																# Nothing to do
																;;
												3)
																notify-send "Switching over from 2 connected displays to 3 not supported"
																$(dump_all_nodes_to_laptop)
																;;
												*)
																notify-send "Connected $current displays. Whoa!"
																$(dump_all_nodes_to_laptop)
																;;
								esac
								;;
				3) 
								case $current in
												1)			
																for n in $(bspc query --nodes --desktop $LAPTOP:^1); do
																				bspc node $n --to-desktop $WORK2:^6
																done
																bspc desktop $LAPTOP:^1 --remove
																bspc monitor $LAPTOP --reset-desktops 11 12 13 14 15 16 17 18 19 20 21
																for i in {1..5}; do
																				bspc desktop $WORK1:^$i --swap $LAPTOP:^$i
																				bspc desktop $LAPTOP:^$i --rename $i
																done;
																for i in {6..11}; do
																				d=$(echo $i - 5 | bc)
																				bspc desktop $WORK2:^$d --swap $LAPTOP:^$i
																				bspc desktop $LAPTOP:^$i $i
																done;
																bspc monitor $WORK1 --remove
																bspc monitor $WORK2 --remove
																;;
												2)
																notify-send "Switching over from 3 connected displays to 2 not supported"
																$(dump_all_nodes_to_laptop)
																;;
												3)
																# Nothing to do
																;;
												*)
																notify-send "Connected $current displays. Whoa!"
																$(dump_all_nodes_to_laptop)
								esac
								;;
				*)
								notify-send "Whoa, connected $prev display(s). How!"
								$(dump_all_nodes_to_laptop)
								;;
esac

#BSPWM configuration
#bspc config border_radius       8
bspc config border_width         2
bspc config window_gap           5
bspc config top_padding          30
bspc config bottom_padding       5
bspc config left_padding         5
bspc config right_padding        5
bspc config single_monocle       false
bspc config click_to_focus       true
bspc config split_ratio          0.50
bspc config borderless_monocle   true
bspc config gapless_monocle      true
#bspc config focus_by_distance    true
#bspc config focus_follows_pointer true
#bspc config history_aware_focus  true
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
bspc config merge_overlapping_monitors true

#BSPWM coloring
bspc config normal_border_color		"#4c566a"
bspc config active_border_color		"#1e1e1e"
bspc config focused_border_color	"#5e81ac"
bspc config presel_feedback_color	"#5e81ac"
#bspc config urgent_border_color 	"#dd2727"


#Fullscreen applications
bspc rule -a inkscape state=fullscreen
bspc rule -a Spotify state=fullscreen
bspc rule -a Vlc state=fullscreen
bspc rule -a VirtualBox Manager state=fullscreen
bspc rule -a VirtualBox Machine state=fullscreen
#bspc rule -a Gimp state=fullscreen

#Floating applications
bspc rule -a Arandr state=floating
bspc rule -a feh state=floating
#bspc rule -a mpv state=floating sticky=on
#bspc rule -a Font-manager state=floating
bspc rule -a Galculator state=floating
#bspc rule -a Gpick state=floating sticky=on
#bspc rule -a Nitrogen state=floating
bspc rule -a Oblogout state=floating
bspc rule -a Pavucontrol state=floating sticky=on
#bspc rule -a Peek state=floating
#bspc rule -a rofi state=floating sticky=on
#bspc rule -a Skype state=floating
#bspc rule -a Stacer state=floating
#bspc rule -a Xfce4-appfinder state=floating sticky=on
bspc rule -a Xfce4-terminal state=floating

#Tiled applications
bspc rule -a Gnome-disks state=tiled
bspc rule -a Xfce4-settings-manager state=tiled

#open applications on specific workspaces
bspc rule -a ff_home desktop='^10' follow=on
bspc rule -a ff_work desktop='^2' follow=on
bspc rule -a vlc desktop='^8'  follow=on
bspc rule -a zoom desktop='^7'  follow=on
bspc rule -a Spotify desktop='^3' follow=on

#Spotify fix  --move desktop 10
#sleep 1
#wmctrl -r Spotify -t 3
#exit

#polybar hidden when fullscreen for vlc, youtube, mpv ...
#find out the name of your monitor with xrandr
xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_eDP1)
#xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_HDMI1)
#xdo below -t $(xdo id -n root) $(xdo id -a polybar-main_HDMI2)

###External rules
##Pseudo automatic mode: always splits focused window when opening new window
#bspc config external_rules_command ~/.config/bspwm/scripts/pseudo_automatic_mode
##Adjust new window: splits biggest windows to keep windows about the same size
#bspc config external_rules_command ~/.config/bspwm/scripts/adjust-new-window
